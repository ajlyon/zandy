buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.0-alpha02'
        //noinspection DifferentKotlinGradleVersion
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.40'
    }
}

allprojects {
    repositories {
        jcenter()
    }
}


repositories {
    google()
    jcenter()
    maven { url 'https://jitpack.io' }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.kotlin.android.extensions'
apply plugin: 'kotlin-kapt'

androidExtensions {
    experimental = true
}

dependencies {
    implementation('oauth.signpost:signpost-commonshttp4:1.2.1.2') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation 'commons-io:commons-io:2.6'
    implementation 'com.squareup:otto:1.3.8'
    implementation 'com.google.zxing:android-integration:3.3.0'

    implementation 'com.github.blocoio:faker:1.0.1'

    implementation 'com.android.support:support-annotations:28.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.21"

    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    testImplementation 'junit:junit:4.12'

    // Required for instrumented tests
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'

    androidTestImplementation('com.schibsted.spain:barista:2.7.1') {
        exclude group: 'com.android.support'
        exclude group: 'org.jetbrains.kotlin' // Only if you already use Kotlin in your project
    }

    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestUtil 'com.android.support.test:orchestrator:1.0.2'

}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def testPropertiesFile = rootProject.file("test.properties")
def testProperties = new Properties()
testProperties.load(new FileInputStream(testPropertiesFile))

testProperties.putAll(gradle.getStartParameter().getProjectProperties())

android {
    compileSdkVersion 29
    buildToolsVersion "28.0.3"

    useLibrary 'org.apache.http.legacy'

    buildFeatures {
        dataBinding = true
    }

    defaultConfig {
        versionCode 1461
        versionName "1.4.6.1"

        minSdkVersion 14
        targetSdkVersion 29

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
    }
    

    signingConfigs {
        release {
            keyAlias keystoreProperties.getProperty('keyAlias', '')
            keyPassword keystoreProperties.getProperty('keyPassword', '')
            storeFile file(keystoreProperties.getProperty('storeFile', 'dummy'))
            storePassword keystoreProperties.getProperty('storePassword', '')
        }
    }

    buildTypes {
        release {
            zipAlignEnabled true
            signingConfig signingConfigs.release
            minifyEnabled true
        }

        debug {
            buildConfigField("String", "TEST_USER_ID", "\"${testProperties.testUserId}\"")
            buildConfigField("String", "TEST_USER_KEY_READONLY", "\"${testProperties.testUserKeyReadonly}\"")
            buildConfigField("String", "FLAVOR", "\"\"")
        }
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
    }
}

apply plugin: 'kotlin-android-extensions'